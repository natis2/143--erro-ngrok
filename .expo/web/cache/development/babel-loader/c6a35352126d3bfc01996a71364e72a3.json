{"ast":null,"code":"import { isIphoneX } from \"react-native-iphone-x-helper\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport function RFPercentage(percent) {\n  var _Dimensions$get = Dimensions.get(\"window\"),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  var standardLength = width > height ? width : height;\n  var offset = width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight;\n  var deviceHeight = isIphoneX() || Platform.OS === \"android\" ? standardLength - offset : standardLength;\n  var heightPercent = percent * deviceHeight / 100;\n  return Math.round(heightPercent);\n}\nexport function RFValue(fontSize) {\n  var standardScreenHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 680;\n\n  var _Dimensions$get2 = Dimensions.get(\"window\"),\n      height = _Dimensions$get2.height,\n      width = _Dimensions$get2.width;\n\n  var standardLength = width > height ? width : height;\n  var offset = width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight;\n  var deviceHeight = isIphoneX() || Platform.OS === \"android\" ? standardLength - offset : standardLength;\n  var heightPercent = fontSize * deviceHeight / standardScreenHeight;\n  return Math.round(heightPercent);\n}","map":{"version":3,"names":["isIphoneX","RFPercentage","percent","Dimensions","get","height","width","standardLength","offset","Platform","OS","StatusBar","currentHeight","deviceHeight","heightPercent","Math","round","RFValue","fontSize","standardScreenHeight"],"sources":["C:/Users/PC PERFORMANCE/Documents/byjus/PRO_1-1_C143_TemplateDoProjeto-main/node_modules/react-native-responsive-fontsize/index.js"],"sourcesContent":["import { isIphoneX } from \"react-native-iphone-x-helper\";\nimport { Platform, StatusBar, Dimensions } from \"react-native\";\n\nexport function RFPercentage(percent) {\n  const { height, width } = Dimensions.get(\"window\");\n  const standardLength = width > height ? width : height;\n  const offset =\n    width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\n\n  const deviceHeight =\n    isIphoneX() || Platform.OS === \"android\"\n      ? standardLength - offset\n      : standardLength;\n\n  const heightPercent = (percent * deviceHeight) / 100;\n  return Math.round(heightPercent);\n}\n\n// guideline height for standard 5\" device screen is 680\nexport function RFValue(fontSize, standardScreenHeight = 680) {\n  const { height, width } = Dimensions.get(\"window\");\n  const standardLength = width > height ? width : height;\n  const offset =\n    width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\n\n  const deviceHeight =\n    isIphoneX() || Platform.OS === \"android\"\n      ? standardLength - offset\n      : standardLength;\n\n  const heightPercent = (fontSize * deviceHeight) / standardScreenHeight;\n  return Math.round(heightPercent);\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,8BAA1B;;;;AAGA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;EACpC,sBAA0BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;EAAA,IAAQC,MAAR,mBAAQA,MAAR;EAAA,IAAgBC,KAAhB,mBAAgBA,KAAhB;;EACA,IAAMC,cAAc,GAAGD,KAAK,GAAGD,MAAR,GAAiBC,KAAjB,GAAyBD,MAAhD;EACA,IAAMG,MAAM,GACVF,KAAK,GAAGD,MAAR,GAAiB,CAAjB,GAAqBI,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6BC,SAAS,CAACC,aAD9D;EAGA,IAAMC,YAAY,GAChBb,SAAS,MAAMS,QAAQ,CAACC,EAAT,KAAgB,SAA/B,GACIH,cAAc,GAAGC,MADrB,GAEID,cAHN;EAKA,IAAMO,aAAa,GAAIZ,OAAO,GAAGW,YAAX,GAA2B,GAAjD;EACA,OAAOE,IAAI,CAACC,KAAL,CAAWF,aAAX,CAAP;AACD;AAGD,OAAO,SAASG,OAAT,CAAiBC,QAAjB,EAAuD;EAAA,IAA5BC,oBAA4B,uEAAL,GAAK;;EAC5D,uBAA0BhB,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;EAAA,IAAQC,MAAR,oBAAQA,MAAR;EAAA,IAAgBC,KAAhB,oBAAgBA,KAAhB;;EACA,IAAMC,cAAc,GAAGD,KAAK,GAAGD,MAAR,GAAiBC,KAAjB,GAAyBD,MAAhD;EACA,IAAMG,MAAM,GACVF,KAAK,GAAGD,MAAR,GAAiB,CAAjB,GAAqBI,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6BC,SAAS,CAACC,aAD9D;EAGA,IAAMC,YAAY,GAChBb,SAAS,MAAMS,QAAQ,CAACC,EAAT,KAAgB,SAA/B,GACIH,cAAc,GAAGC,MADrB,GAEID,cAHN;EAKA,IAAMO,aAAa,GAAII,QAAQ,GAAGL,YAAZ,GAA4BM,oBAAlD;EACA,OAAOJ,IAAI,CAACC,KAAL,CAAWF,aAAX,CAAP;AACD"},"metadata":{},"sourceType":"module"}